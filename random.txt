private GppJson28FieldValidationResponse compareFields(Map<String, Object> entry, Map<String, Object> pairedEntry) {
    GppJson28FieldValidationResponse response = new GppJson28FieldValidationResponse();
    Map<String, GppJson28FieldValidationResponse.Json28FieldValidation> validationMap = new HashMap<>();

    Set<String> allKeys = new HashSet<>();
    allKeys.addAll(entry.keySet());
    allKeys.addAll(pairedEntry.keySet());

    for (String key : allKeys) {
        String entryValue = entry.containsKey(key) ? String.valueOf(entry.get(key)) : "";
        String pairedEntryValue = pairedEntry.containsKey(key) ? String.valueOf(pairedEntry.get(key)) : "";
        String validationStatus;

        if (entryValue.equals(pairedEntryValue)) {
            validationStatus = "true";
        } else if (entryValue.isEmpty() || pairedEntryValue.isEmpty()) {
            validationStatus = "null";
        } else {
            validationStatus = "false";
        }

        GppJson28FieldValidationResponse.Json28FieldValidation fieldValidation = new GppJson28FieldValidationResponse.Json28FieldValidation();
        fieldValidation.setValidationStatus(validationStatus);
        fieldValidation.setsValue(entryValue);
        fieldValidation.setrValue(pairedEntryValue);

        validationMap.put(key, fieldValidation);
    }

    response.setGppJson28Fields(validationMap);
    return response;
}
