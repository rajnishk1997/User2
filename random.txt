import java.util.List;
import java.util.Map;

public class BulkNetworkMasterDTO {
    private List<Map<String, String>> mappedNetworks;
    private String platformName;
    private int currentUserId;

    public List<Map<String, String>> getMappedNetworks() {
        return mappedNetworks;
    }

    public void setMappedNetworks(List<Map<String, String>> mappedNetworks) {
        this.mappedNetworks = mappedNetworks;
    }

    public String getPlatformName() {
        return platformName;
    }

    public void setPlatformName(String platformName) {
        this.platformName = platformName;
    }

    public int getCurrentUserId() {
        return currentUserId;
    }

    public void setCurrentUserId(int currentUserId) {
        this.currentUserId = currentUserId;
    }
}


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/networkMaster")
public class SOTNetworkMasterController {

    @Autowired
    private SOTNetworkMasterService sotNetworkMasterService;

    @PostMapping("/bulkSaveNetworkMaster")
    public ResponseEntity<ReqRes> bulkSaveNetworkMaster(@RequestBody BulkNetworkMasterDTO requestDTO) {
        try {
            sotNetworkMasterService.saveBulkNetworkMaster(requestDTO);

            ReqRes response = new ReqRes(200, null, "Bulk Network Master data saved successfully");
            return ResponseEntity.ok(response);
        } catch (Exception e) {
            e.printStackTrace();
            ReqRes errorResponse = new ReqRes(500, "Internal Server Error", "An error occurred while saving!");
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(errorResponse);
        }
    }
}



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Map;

@Service
public class SOTNetworkMasterService {

    @Autowired
    private SOTNetworkMasterRepository sotNetworkMasterRepository;

    @Autowired
    private SPlatformRepository sPlatformRepository;

    public void saveBulkNetworkMaster(BulkNetworkMasterDTO requestDTO) {
        // Fetch SPlatform entity using platformName
        SPlatform platform = sPlatformRepository.findByPlatformName(requestDTO.getPlatformName());

        if (platform == null) {
            throw new RuntimeException("Invalid platform name: " + requestDTO.getPlatformName());
        }

        // Iterate over mappedNetworks array and save each record
        for (Map<String, String> network : requestDTO.getMappedNetworks()) {
            SOTNetworkMaster networkMaster = new SOTNetworkMaster();
            networkMaster.setSotNetworkName(network.get("0")); // Map '0' to sotNetworkName
            networkMaster.setGppNetworkName(network.get("1")); // Map '1' to gppNetworkName
            networkMaster.setPlatform(platform);              // Set ManyToOne relationship
            networkMaster.setCreatedBy(requestDTO.getCurrentUserId());

            // Save entity
            sotNetworkMasterRepository.save(networkMaster);
        }
    }
}



import org.springframework.data.jpa.repository.JpaRepository;
import com.optum.entity.SOTNetworkMaster;

public interface SOTNetworkMasterRepository extends JpaRepository<SOTNetworkMaster, Integer> {
}


import org.springframework.data.jpa.repository.JpaRepository;
import com.optum.entity.SPlatform;

public interface SPlatformRepository extends JpaRepository<SPlatform, Integer> {
    SPlatform findByPlatformName(String platformName);
}



{
  "mappedNetworks": [
    {
      "0": "BHSGEN",
      "1": "BHSGEN"
    },
    {
      "0": "Optum Mail Networks, if Present",
      "1": "OptumL"
    },
    {
      "0": "Optum Mail Networks",
      "1": "SALVECO"
    },
    {
      "0": "Optum Mail Network",
      "1": "OptumLM"
    },
    {
      "0": "Optum Mail",
      "1": "OptumLYY"
    }
  ],
  "platformName": "A6",
  "currentUserId": 37
}
