 @Query("SELECT u FROM User u WHERE u.isActiveUser = :isActive")
    List<User> searchUsersByStatus(@Param("isActive") Boolean isActive);

    @Query("SELECT u FROM User u WHERE " +
           "LOWER(u.userFirstName) LIKE LOWER(CONCAT('%', :keyword, '%')) OR " +
           "LOWER(u.userLastName) LIKE LOWER(CONCAT('%', :keyword, '%')) OR " +
           "LOWER(u.userName) LIKE LOWER(CONCAT('%', :keyword, '%'))")
    List<User> searchUsersByKeywordWithoutRoles(@Param("keyword") String keyword);

    @Query("SELECT u FROM User u WHERE " +
           "(LOWER(u.userFirstName) LIKE LOWER(CONCAT('%', :keyword, '%')) OR " +
           "LOWER(u.userLastName) LIKE LOWER(CONCAT('%', :keyword, '%')) OR " +
           "LOWER(u.userName) LIKE LOWER(CONCAT('%', :keyword, '%'))) " +
           "AND (:isActive IS NULL OR u.isActiveUser = :isActive)")
    List<User> searchUsersByKeywordAndStatus(@Param("keyword") String keyword, @Param("isActive") Boolean isActive);
	
	 public List<UserDTO> searchUsersByKeywordAndStatus(String keyword, Boolean isActive) {
        try {
            List<User> users;
            if (keyword == null && isActive == null) {
                users = Collections.emptyList();
            } else if (keyword == null) {
                users = userDao.searchUsersByStatus(isActive);
            } else if (isActive == null) {
                users = userDao.searchUsersByKeywordWithoutRoles(keyword);
            } else {
                users = userDao.searchUsersByKeywordAndStatus(keyword, isActive);
            }
            return users.stream().map(this::mapToUserDTO).collect(Collectors.toList());
        } catch (Exception e) {
            // Log the exception or handle it as needed
            return Collections.emptyList();
        }
    }
	
	 // Constructor
    public UserDTO(String userName, String userFirstName, String userLastName, String userPassword, String userEmail, int userRid, Integer managerId) {
        this.userName = userName;
        this.userFirstName = userFirstName;
        this.userLastName = userLastName;
        this.userPassword = userPassword;
        this.userEmail = userEmail;
        this.userRid = userRid;
        this.managerId = managerId;
    }
	
	