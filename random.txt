// Get matching objects from filteredGpp28 for each side using the ADAECD field.
List<Map<String, Object>> planData = filteredGpp28.stream()
        .filter(map -> planCode.equalsIgnoreCase(String.valueOf(map.get("ADAECD")).trim()))
        .collect(Collectors.toList());
List<Map<String, Object>> orPlanData = filteredGpp28.stream()
        .filter(map -> orPlanCode.equalsIgnoreCase(String.valueOf(map.get("ADAECD")).trim()))
        .collect(Collectors.toList());

// If either side is missing, record a no-pair result.
if (planData.isEmpty() || orPlanData.isEmpty()) {
    GppJson28Field field = new GppJson28Field();
    field.setFAILEDVALIDATION("No Pair found");
    fieldResults.add(field);
    continue;
}

// Look for the first active record in each list.
Optional<Map<String, Object>> activePlanObj = planData.stream()
    .filter(map -> isActiveDate(String.valueOf(map.get("I")).trim()))
    .findFirst();

Optional<Map<String, Object>> activeOrPlanObj = orPlanData.stream()
    .filter(map -> isActiveDate(String.valueOf(map.get("I")).trim()))
    .findFirst();

if (!activePlanObj.isPresent() || !activeOrPlanObj.isPresent()) {
    GppJson28Field field = new GppJson28Field();
    field.setFAILEDVALIDATION("Non-active date");
    fieldResults.add(field);
    continue;
}

Map<String, Object> planObj = activePlanObj.get();
Map<String, Object> orPlanObj = activeOrPlanObj.get();

// Compare the "K" field values.
String planK = String.valueOf(planObj.get("K")).trim();
String orPlanK = String.valueOf(orPlanObj.get("K")).trim();
String validationResult = planK.equals(orPlanK) ? "Match" : "Not Match";

// Create two separate GppJson28Field objects:
GppJson28Field fieldR = new GppJson28Field();
// ... populate fieldR using planObj ...
fieldR.setADAECD(String.valueOf(planObj.get("ADAECD"))); // e.g., "EDHLTP04 R"
fieldR.setFAILEDVALIDATION(validationResult);

GppJson28Field fieldS = new GppJson28Field();
// ... populate fieldS using orPlanObj ...
fieldS.setADAECD(String.valueOf(orPlanObj.get("ADAECD"))); // e.g., "EDHLTP04 S"
fieldS.setFAILEDVALIDATION(validationResult);

// Add both objects to the result list.
fieldResults.add(fieldR);
fieldResults.add(fieldS);
