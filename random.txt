    private List<Map<String, Object>> findMatchingEntries(List<Map<String, Object>> gppJson28List, String value) {
        List<Map<String, Object>> matchedEntries = new ArrayList<>();

        // Step 1: Find the entry with ADAECD equal to value
        Map<String, Object> targetEntry = gppJson28List.stream()
                .filter(item -> value.equals(item.get("ADAECD")))
                .findFirst()
                .orElse(null);

        if (targetEntry == null) {
            return matchedEntries; // No matching entry found
        }

        String targetAdbotx = (String) targetEntry.get("ADBOTX");

        // Step 2: Generate the possible matching ADBOTX values
        List<String> possibleAdbotxValues = generatePossibleAdbotxValues(targetAdbotx);

        // Step 3: Find the entries with matching ADBOTX values
        List<Map<String, Object>> potentialMatches = gppJson28List.stream()
                .filter(item -> possibleAdbotxValues.contains(item.get("ADBOTX")))
                .collect(Collectors.toList());

        // Step 4: Narrow down to the exact match by checking ADAECD
        for (Map<String, Object> entry : potentialMatches) {
            String entryAdbotx = (String) entry.get("ADBOTX");
            if (entryAdbotx.equals(targetAdbotx.replace("R", "S"))) {
                matchedEntries.add(entry);
            } else if (entryAdbotx.equals(targetAdbotx.replace("RT", "SP"))) {
                matchedEntries.add(entry);
            } else if (entryAdbotx.equals(targetAdbotx.replace("R", "SP"))) {
                matchedEntries.add(entry);
            } // Add more conditions as needed
        }

        return matchedEntries;
    }

    private List<String> generatePossibleAdbotxValues(String adbotx) {
        List<String> possibleValues = new ArrayList<>();
        if (adbotx.endsWith("R")) {
            possibleValues.add(adbotx.replace("R", "S"));
        }
        if (adbotx.endsWith("RT")) {
            possibleValues.add(adbotx.replace("RT", "SP"));
        }
        if (adbotx.endsWith("R")) {
            possibleValues.add(adbotx.replace("R", "SP"));
        }
        // Add more rules as needed
        return possibleValues;
    }