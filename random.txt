 // Location relationship
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "location_id") // Foreign key column in rx_user referencing rx_location
    private Location location;
	
	
	  public Location getLocation() {
        return location;
    }

    public void setLocation(Location location) {
        this.location = location;
    }
	
	
	------------
	
	 @OneToMany(mappedBy = "location", fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    private Set<User> users = new HashSet<>();
	
	   public Set<User> getUsers() {
        return users;
    }

    public void setUsers(Set<User> users) {
        this.users = users;
    }
	
	------------------
	 // Fetch Location entity using Location ID from frontend
        Long locationId = userDTO.getLocationId();
        Location location = locationRepository.findById(locationId)
                .orElseThrow(() -> new RuntimeException("Location not found"));

        // Set the Location entity in the User entity
        user.setLocation(location);